// This file is part of the KDAB State Machine Editor Library.
//
// Copyright (C) 2015-2020 Klar√§lvdalens Datakonsult AB, a KDAB Group company, info@kdab.com.
// All rights reserved.
// Author: Kevin Funk <kevin.funk@kdab.com>
//
// Licensees holding valid commercial KDAB State Machine Editor Library
// licenses may use this file in accordance with the KDAB State Machine Editor
// Library License Agreement provided with the Software.
//
// This file may be distributed and/or modified under the terms of the
// GNU Lesser General Public License version 2.1 as published by the
// Free Software Foundation and appearing in the file LICENSE.LGPL.txt included.
//
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
//
// Contact info@kdab.com if any conditions of this licensing are not
// clear to you.

#include "debuginterface_types.h"

#include <QString>

class DebugInterface
{
    SLOT(void repopulateGraph());

    SIGNAL(statusChanged(bool haveStateMachine, bool running));
    SIGNAL(message(const QString &message));
    SIGNAL(stateAdded(KDSME::DebugInterface::StateId state, KDSME::DebugInterface::StateId parent, bool hasChildren, const QString &label, KDSME::DebugInterface::StateType type, bool connectToInitial));
    SIGNAL(stateEntered(KDSME::DebugInterface::StateId state));
    SIGNAL(stateExited(KDSME::DebugInterface::StateId state));
    SIGNAL(transitionAdded(KDSME::DebugInterface::TransitionId state, KDSME::DebugInterface::StateId source, KDSME::DebugInterface::StateId target, const QString &label));
    SIGNAL(stateConfigurationChanged(const KDSME::DebugInterface::StateMachineConfiguration& config));
    SIGNAL(maximumDepthChanged(int depth));
    SIGNAL(transitionTriggered(KDSME::DebugInterface::TransitionId transition, const QString &label));
    SIGNAL(aboutToRepopulateGraph());
    SIGNAL(graphRepopulated());
};
